# Based on https://github.com/Toumash/mlflow-docker

version: '3.2'
services:
  s3minio:
    image: minio/minio:RELEASE.2021-06-14T01-29-23Z
    container_name: aws-s3
    ports:
      - 9000:9000
    env_file:
      - .env
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
    command: 
      server /date
    networks:
      - A
    volumes:
      - ./s3:/date
  db:
      restart: always
      image: postgres:14.1
      container_name: mlflow_db
      ports:
          - "5432:5432"
      env_file:
          - .env
      environment:
          - POSTGRES_DB=${POSTGRES_DATABASE}
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          - POSTGRES_ROOT_PASSWORD=${POSTGRES_ROOT_PASSWORD}
      volumes:
          - ./dbdata:/var/lib/postgresql/data
      networks:
            - A
  mlflow:
      container_name: tracker_mlflow
      image: tracker_ml
      build:
          context: ./mlflow
          dockerfile: Dockerfile
      depends_on:
          - db
          - s3minio
      ports:
          - "5000:5000"
      env_file:
          - .env
      environment: 
          - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          - AWS_DEFAULT_REGION=${AWS_REGION}
          - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
      networks:
          - A
      entrypoint: ./start-service.sh

  workspace:
      container_name: workspace
      image: mltooling/ml-workspace:0.13.2
      depends_on:
         - mlflow
      env_file:
         - .env
      volumes:
         - ./workspace:/workspace
      networks:
         - A
      ports:
         - "8080:8080"
      restart: always
      entrypoint: bash -c "pip install -r /workspace/requirements.txt && python /resources/docker-entrypoint.py"


networks:
    A:
        driver: bridge
